{% macro listPackages(packages, paginate, showAutoUpdateWarning, meta) %}
    <ul class="packages">
        {% for package in packages %}
            {% if package.id is numeric %}
                {% set packageUrl = path('view_package', { 'name' : package.name }) %}
            {% else %}
                {% set packageUrl = path('view_providers', { 'name' : package.name }) %}
            {% endif %}
            <li data-url="{{ packageUrl }}">
                {% if meta and package.id is numeric %}
                    <span class="metadata">
                        <i class="icon-download"></i> {{ meta.downloads[package.id]|default(0)|number_format(0, '.', ' ') }}
                        <i class="icon-star"></i> {{ meta.favers[package.id]|number_format(0, '.', ' ') }}
                    </span>
                {% endif %}
                <h1>
                    <a href="{{ packageUrl }}">{{ package.name }}</a>
                    {% if package.id is not numeric %}
                        (virtual package)
                    {% endif %}
                    {% if showAutoUpdateWarning and not package.autoUpdated %}
                        [Not auto-updated]
                    {% endif %}
                </h1>
                {% if package.abandoned is defined and package.abandoned %}
                <span class="abandoned">
                    <i class="icon-warning-sign"></i> Abandoned! {% if package.replacementPackage %}Use: <a href="{{ path('view_package', {name: package.replacementPackage}) }}">{{ package.replacementPackage }}</a>{% endif %}
                </span>
                {% endif %}
                {% if package.description is defined and package.description %}
                    <p class="package-description">{{ package.description }}</p>
                {% endif %}

            </li>
        {% endfor %}

        {% if paginate is defined and paginate and packages.haveToPaginate() %}
            {{ pagerfanta(packages, 'default', {'proximity': 2}) }}
        {% endif %}
    </ul>
{% endmacro %}

{% macro packageLink(packageName, type) %}
    {%- if type == 'provide' and (packageName is existing_provider or packageName is existing_package) -%}
        <a href="{{ path('view_providers', { 'name': packageName }) }}">{{ packageName }}</a>
    {%- elseif packageName is existing_package -%}
        <a href="{{ path('view_package', { 'name': packageName }) }}">{{ packageName }}</a>
    {%- else -%}
        {{ packageName }}
    {%- endif -%}
{% endmacro %}
